{"version":3,"file":"js/app.837cc602.js","mappings":"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","sources":["webpack://blogproject/./src/App.vue","webpack://blogproject/./src/App.vue?7ccd","webpack://blogproject/./src/components/MainPage.vue","webpack://blogproject/./src/components/MainPage.vue?b3e7","webpack://blogproject/./src/components/UserLogin.vue","webpack://blogproject/./src/components/UserLogin.vue?d766","webpack://blogproject/./src/components/SignUp.vue","webpack://blogproject/./src/components/SignUp.vue?b466","webpack://blogproject/./src/components/CreatePost.vue","webpack://blogproject/./src/components/CreatePost.vue?13ff","webpack://blogproject/./src/components/EditPost.vue","webpack://blogproject/./src/components/EditPost.vue?bd07","webpack://blogproject/./src/components/PostList.vue","webpack://blogproject/./src/components/PostList.vue?04fa","webpack://blogproject/./src/components/PostDetail.vue","webpack://blogproject/./src/components/PostDetail.vue?8c2a","webpack://blogproject/./src/router/index.js","webpack://blogproject/./src/main.js","webpack://blogproject/webpack/bootstrap","webpack://blogproject/webpack/runtime/chunk loaded","webpack://blogproject/webpack/runtime/compat get default export","webpack://blogproject/webpack/runtime/define property getters","webpack://blogproject/webpack/runtime/global","webpack://blogproject/webpack/runtime/hasOwnProperty shorthand","webpack://blogproject/webpack/runtime/make namespace object","webpack://blogproject/webpack/runtime/node module decorator","webpack://blogproject/webpack/runtime/jsonp chunk loading","webpack://blogproject/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view>\r\n    </router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import MainPage from './components/MainPage.vue';\r\n//import UserLogin from './components/UserLogin.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    //UserLogin,\r\n    //MainPage\r\n  }\r\n}\r\n</script>","import { render } from \"./App.vue?vue&type=template&id=5e3f09e8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"blog-container\">\r\n    <header class=\"blog-header\">\r\n      <button class=\"menu-button\" @click=\"goToPostList\">목록</button>\r\n      <h1 class=\"blog-title\">Blog Project</h1>\r\n      <div class=\"header-buttons\">\r\n        <button v-if=\"!isLoggedIn\" class=\"action-button\" @click=\"goToUserLogin\">로그인</button>\r\n        <button v-else class=\"action-button\" @click=\"logout\">로그아웃</button>\r\n        <button v-if=\"isLoggedIn\" class=\"action-button\" @click=\"goToCreatePage\">글작성</button>\r\n      </div>\r\n    </header>\r\n\r\n    <div class=\"main-content\">\r\n      <main class=\"post-list\">\r\n        <div v-for=\"post in sortedPost\" :key=\"post.id\" class=\"post-item\">\r\n          <h2>{{ post.title }}</h2>\r\n          <div class=\"post-meta\">\r\n            <p class=\"author\">글쓴이 : {{ post.name }}</p>\r\n            <div class=\"meta-right\">\r\n              <p class=\"date\">작성일 : {{ formatDate(post.created_at) }}</p>\r\n          <p class=\"views\">조회수 : {{ post.views }}</p>\r\n            </div>\r\n          </div>\r\n          <p v-html=\"post.content\"></p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BlogMain\",\r\n  data() {\r\n    return { //초기 데이터\r\n      posts: [\r\n        {\r\n          id: 1,\r\n          title: '',\r\n          content: '',\r\n          author: '',\r\n          date: '',\r\n          views: 1,\r\n        }\r\n      ],\r\n      previewVisible: false, // 미리보기 표시 여부\r\n      isLoggedIn: !!localStorage.getItem('currentUser'),//로그인 여부\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    sortedPost() {\r\n      return [...this.posts]\r\n        .sort((a, b) => b.views - a.views)//조회수 내림차순\r\n        .slice(0, 2);\r\n    },\r\n  },\r\n\r\n  mounted(){\r\n    fetch('http://localhost:3000/list')//서버에서 데이터 가져오기\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      this.posts = data.sort((a, b) => b.views - a.views);//조회수 내림차순\r\n    })\r\n    .catch(error => console.error('Error fetching posts:', error));\r\n\r\n  window.addEventListener('storage', this.syncLoginState);\r\n  },\r\n  methods: {\r\n    onDragStart(event) {\r\n      event.dataTransfer.setData(\"text\", \"menu-button\");\r\n    },\r\n    onDrop(event) {//드래그된 데이터 가져옴\r\n      const draggedItem = event.dataTransfer.getData(\"text\");\r\n      if (draggedItem === \"menu-button\") {\r\n        this.previewVisible = true;\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('currentUser');\r\n      this.isLoggedIn = false;\r\n      alert('로그아웃 되었습니다.');\r\n    },\r\n    syncLoginState(event) {\r\n      if (event.key === 'currentUser') {\r\n        this.isLoggedIn = !!localStorage.getItem('currentUser');\r\n      }\r\n    },\r\n\r\n    goToCreatePage(){\r\n      this.$router.push('/create');\r\n    },\r\n    goToUserLogin(){\r\n      this.$router.push('/login');\r\n    },\r\n    goToPostList(){\r\n      this.$router.push('/list');\r\n    },\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('storage', this.syncLoginState);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.blog-container {\r\n  font-family: Arial, sans-serif;\r\n  margin: 0 auto; /*수평 중앙 정렬 */\r\n  padding: 15px;\r\n  border: 2px solid #ddd; /* 전체 컨테이너 테두리 */\r\n  border-radius: 10px; /* 둥근 모서리 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\r\n  max-width: 1200px;\r\n  background-color: #f4f4f4; /* 회색 배경 */\r\n}\r\n\r\n.blog-header {\r\n  display: flex;\r\n  justify-content: space-between; /* 왼쪽, 가운데, 오른쪽 배치 */\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ccc;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.menu-button {\r\n  background-color: #f0f0f0;\r\n  border: 1px solid #ccc;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.blog-title {\r\n  flex: 1;\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 24px;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px; /* 버튼 간격 */\r\n}\r\n\r\n.action-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  margin-top: 20px;\r\n  gap: 20px; /* 미리보기와 포스트 리스트 사이의 간격 */\r\n}\r\n\r\n.preview-panel {\r\n  flex: 1;\r\n  background-color: #eaeaea;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  max-width: 200px;\r\n}\r\n\r\n.preview-panel h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.preview-panel ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.preview-panel li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 14px;\r\n}\r\n\r\n.post-list {\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.post-item {\r\n  display: flex; /* 가로 정렬 */\r\n  flex-direction: column; /* 기본적으로 세로 정렬 */\r\n  gap: 10px; /* 요소 간 간격 */\r\n\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n.post-meta {\r\n  display: flex; /* 가로 정렬 */\r\n  justify-content: space-between; /* 양쪽 끝으로 배치 */\r\n  align-items: center; /* 수직 중앙 정렬 */\r\n}\r\n.meta-right{\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n.author{\r\n  font-size: 14px;\r\n}\r\n.date,\r\n.views{\r\n  font-size: 14px;\r\n}\r\n.post-item h2 {\r\n  /* margin: 0 0 5px 0; */\r\n  margin-bottom: 10px;\r\n  font-size: 20px;\r\n  color: #333;\r\n}\r\n\r\n.post-item p {\r\n  /* margin: 0; */\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #555\r\n}\r\n</style>\r\n","import { render } from \"./MainPage.vue?vue&type=template&id=58afef4e&scoped=true\"\nimport script from \"./MainPage.vue?vue&type=script&lang=js\"\nexport * from \"./MainPage.vue?vue&type=script&lang=js\"\n\nimport \"./MainPage.vue?vue&type=style&index=0&id=58afef4e&lang=css&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-58afef4e\"]])\n\nexport default __exports__","<template><!--로그인-->\r\n  <div class=\"container\">\r\n    <h1>\r\n      <router-link to=\"/\" class=\"blog-title\">BlogProject</router-link>\r\n    </h1>\r\n    <div class=\"login-container\"><!-- 로그인 폼 컨테이너 -->\r\n      <h2>Login</h2>\r\n      <form @submit.prevent=\"login\" id=\"login-form\">\r\n        <label for=\"userId\">아이디</label><!-- 아이디 입력 필드 -->\r\n        <input type=\"text\" name=\"userId\" v-model=\"email\" placeholder=\"아이디를 입력하세요.\">\r\n        <label for=\"userPassword\">비밀번호</label>\r\n        <input type=\"password\" name=\"userPassword\" v-model=\"password\" placeholder=\"비밀번호를 입력하세요.\">\r\n\r\n        <div class=\"button-group\"><!-- 버튼 그룹으로 로그인과 회원가입 버튼 생성 -->\r\n          <button type=\"submit\" class=\"submit-button\">Login</button>\r\n          <button type=\"button\" class=\"signup-button\" @click=\"goToSignUp\">회원가입</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserLogin',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  },\r\n\r\n  methods: {// 로그인 버튼 클릭 시 실행되는 메서드\r\n    goToSignUp() {\r\n      this.$router.push('/signup');\r\n    },\r\n    login() {// 로그인 요청\r\n      const loginData = {\r\n        id: this.email,\r\n        password: this.password,\r\n      };\r\n\r\n      axios.post('http://localhost:3000/login', loginData)\r\n        .then(response => {\r\n          alert(response.data.message);\r\n          if (response.data.user) {// 로그인 성공 시 사용자 정보 저장\r\n            console.log('로그인된 사용자:', response.data.user);\r\n            localStorage.setItem('currentUser', JSON.stringify(response.data.user));// 로컬 스토리지에 사용자 정보 저장\r\n            window.dispatchEvent(new Event('storage'));\r\n            this.$router.push('/');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('로그인 오류:', error);\r\n          alert('로그인 실패! 아이디와 비밀번호를 확인하세요.');\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #f3f3f3;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n}\r\n\r\n.h1 {\r\n  font-size: 32px;\r\n  color: #333;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-container {\r\n  width: 360px;\r\n  padding: 30px;\r\n  margin-top: 30px;\r\n  background-color: #aba6a6;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  ;\r\n}\r\n\r\n.login-container > h2 {/* 로그인 폼 제목 스타일 */\r\n  font-size: 20px;\r\n  color: black;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n#login-form label {/* 라벨 스타일 */\r\n  font-size: 14px;\r\n  color: #000;\r\n  margin-bottom: 8px;\r\n  text-align: left;\r\n}\r\n\r\n#login-form input[type=\"text\"],/* 입력 필드 스타일 */\r\n#login-form input[type=\"password\"] {\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 8px;\r\n  margin-bottom: 20px;\r\n  border-radius: 4px;\r\n  background-color: #F8F8F8;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n#login-form input[type=\"text\"]::placeholder,\r\n#login-form input[type=\"password\"]::placeholder {\r\n  color: #b0b0b0;\r\n}\r\n\r\n#login-form > .button-group {/* 버튼 그룹 스타일 */\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n#login-form > input[type=\"submit\"] {\r\n  width: 48%;\r\n  padding: 10px;\r\n  color: black;\r\n  font-size: 14px;\r\n  background-color: #f8f8f8;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n#login-form input[type=\"submit\"]:hover {\r\n  background-color: #f8f8f8;\r\n}\r\n\r\n/* 로그인, 회원가입 버튼  */\r\n.submit-button,\r\n.signup-button {\r\n  width: 35%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  background-color: #f8f8f8;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.submit-button:hover,\r\n.signup-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.blog-title {/* 블로그 제목 스타일 */\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 32px;\r\n}\r\n</style>","import { render } from \"./UserLogin.vue?vue&type=template&id=790249d4\"\nimport script from \"./UserLogin.vue?vue&type=script&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=790249d4&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template><!--회원가입-->\r\n  <div class=\"container\">\r\n    <router-link to=\"/\" class=\"blogTitle\">BlogProject</router-link>\r\n    <div class=\"signup-container\">\r\n      <h2>회원가입</h2>\r\n      <form @submit.prevent=\"submitForm\" id=\"signup-form\"><!--회원가입 폼 컨테이너-->\r\n        <div>\r\n          <label for=\"name\">닉네임</label>\r\n          <input type=\"text\" id=\"name\" v-model=\"name\" placeholder=\"사용하실 닉네임을 입력하세요.\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"id\">아이디</label>\r\n          <input type=\"text\" id=\"email\" v-model=\"email\" placeholder=\"사용하실 아이디를 입력하세요.\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"password\">비밀번호</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"사용하실 비밀번호를 입력하세요.\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"passwordConfirm\">비밀번호 확인</label>\r\n          <input type=\"password\" id=\"passwordConfirm\" v-model=\"passwordConfirm\" placeholder=\"비밀번호를 한번 더 입력하세요.\" />\r\n        </div>\r\n        <button type=\"submit\" class=\"signUp-button\">회원가입</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'SignUp',\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {// 비밀번호 확인 검증\r\n      if (this.password !== this.passwordConfirm) {\r\n        alert('비밀번호가 일치하지 않습니다. 다시 확인해주세요.');\r\n        return;\r\n      }\r\n      const userData = {// 서버로 전송할 데이터 준비\r\n        name: this.name,\r\n        id: this.email, // name 대신 이메일을 아이디로 사용\r\n        password: this.password,\r\n      };\r\n\r\n      axios.post('http://localhost:3000/signup', userData)// Axios로 서버에 POST 요청 보내기\r\n        .then((response) => {// 서버 응답이 성공일 경우 처리\r\n          alert(response.data.message);\r\n          this.$router.push('/'); // 메인 페이지로 이동\r\n        })\r\n        .catch((error) => {\r\n          // 서버 응답이 실패일 경우 처리\r\n          console.error('회원가입 오류:', error);\r\n          alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n        });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #f3f3f3;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n}\r\n\r\n.h1 {\r\n  font-size: 32px;\r\n  color: #333;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.blogTitle {\r\n  text-decoration: none;\r\n  color: #000;\r\n  font-size: 32px;\r\n}\r\n\r\n.signup-container {/* 회원가입 폼 컨테이너 스타일 */\r\n  width: 360px;\r\n  padding: 30px;\r\n  margin-top: 30px;\r\n  background-color: #aba6a6;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  ;\r\n}\r\n\r\n.signup-container > h2 {/* 회원가입 제목 */\r\n  font-size: 20px;\r\n  color: black;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#signup-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n#signup-form label {\r\n  font-size: 14px;\r\n  color: #000;\r\n  margin-bottom: 8px;\r\n  text-align: left;\r\n}\r\n\r\n/* 텍스트 및 비밀번호 입력 필드 스타일 */\r\n#signup-form input[type=\"text\"],\r\n#signup-form input[type=\"password\"] {\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 8px;\r\n  margin-bottom: 20px;\r\n  border-radius: 4px;\r\n  background-color: #F8F8F8;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.signUp-button {\r\n  widows: 100px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  color: #000;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: block;\r\n}\r\n\r\n.signUp-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n</style>","import { render } from \"./SignUp.vue?vue&type=template&id=172bc459\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js\"\n\nimport \"./SignUp.vue?vue&type=style&index=0&id=172bc459&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <!--글작성 페이지-->\r\n  <div class=\"create-post-container\">\r\n    <header>\r\n      <h1>\r\n        <router-link to=\"/\" class=\"blog_title\">BlogProject</router-link><!--홈으로 이동-->\r\n      </h1>\r\n      <button class=\"logout-button\" @click=\"logout\">로그아웃</button>\r\n    </header>\r\n    <h2 class=\"create-post-title\">글작성</h2>\r\n    <form @submit.prevent=\"submitPost\" class=\"post-form\">\r\n      <div class=\"input-group\">\r\n        <label for=\"title\">제목</label>\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"제목을 입력하세요.\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"content\">내용</label>\r\n        <div id=\"editor\"></div>\r\n      </div>\r\n      <div class=\"inputfile\"><!--파일 업로드-->\r\n        <input type=\"file\" name=\"boardfile\" id=\"inputFile\" />\r\n      </div>\r\n      <button type=\"submit\" class=\"complete-button\">작성 완료</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\n\r\nexport default {\r\n  name: \"CreatePost\",\r\n  data() {\r\n    return {\r\n      title: \"\",\r\n      content: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    submitPost() {\r\n      const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));//현재 사용자 정보\r\n\r\n      if (!currentUser || !currentUser.name || !currentUser.email) {\r\n        alert.apply(\"로그인이 필요합니다.\");\r\n        this.$router.push(\"/login\");\r\n        return;\r\n      }//로그인 확인 조건\r\n\r\n      this.content = this.editor.root.innerHTML;\r\n\r\n      //새로운 글 데이터 작성\r\n      const newPost = {\r\n        id: Date.now(), //고유 ID\r\n        name: currentUser.name, //작성자 이름\r\n        email: currentUser.email,\r\n        title: this.title, //글 제목\r\n        content: this.content, //글 내용\r\n        date: new Date().toISOString(),\r\n        views: 0, //초기 조회수\r\n      };\r\n\r\n      axios//서버에 게시글 데이터 전송 post 요청\r\n        .post('http://localhost:3000/create', newPost)\r\n        .then(() => {\r\n          this.$router.push(\"/list\");//성공 시 게시글 목록 이동\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"게시물 생성 중 오류 발생:\", error);\r\n          alert(\"게시물 생성에 실패했습니다.\");\r\n        });\r\n    },\r\n\r\n    logout() {\r\n      localStorage.removeItem(\"user\");\r\n      this.$router.push(\"/login\");\r\n    },\r\n  },\r\n  mounted() {\r\n    // Quill 초기화\r\n    this.editor = new Quill(\"#editor\", {\r\n      theme: \"snow\", // 기본 눈 테마 설정\r\n      placeholder: \"내용을 입력하세요.\",\r\n      modules: {\r\n        toolbar: [\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"], // 텍스트 꾸미기 옵션 굵게, 기울임, 밑줄, 취소선\r\n          [{ list: \"ordered\" }, { list: \"bullet\" }], // 리스트 옵션\r\n          [\"link\", \"image\"], // 링크와 이미지\r\n          [{ align: [] }], // 텍스트 정렬\r\n          [{ size: [\"small\", false, \"large\", \"huge\"] }], // 텍스트 크기\r\n          [{ color: [] }, { background: [] }], // 글자색과 배경색\r\n        ],\r\n      },\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#editor {\r\n  height: 400px;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n}\r\n\r\n.create-post-container {/*전체 작성 페이지 컨테이너 */\r\n  width: 90%;\r\n  margin: 50px auto;\r\n  background-color: #aba6a6;\r\n  padding: 20px;\r\n  border-radius: 10px;/* 모서리 둥글게*/\r\n  box-shadow: 0px 4px 0px rgba(0, 0, 0, 0.1);/*그림자 효과 */\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.blog_title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\n\r\n.logout-button {/* 로그아웃 버튼 */\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  border: none;\r\n  color: black;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  padding: 8px 16px;\r\n}\r\n\r\n\r\n.create-post-title {/* 글작성 제목 스타일 */\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.input-group label {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.input-group input,\r\n.input-group textarea {\r\n  /* width: 100%; */\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n  /* box-sizing: border-box; */\r\n}\r\n\r\n.complete-button {\r\n  width: 120px;\r\n  align-self: flex-end;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n}\r\n\r\n.complete-button:hover {\r\n  background: #0056b3;\r\n}\r\n</style>\r\n","import { render } from \"./CreatePost.vue?vue&type=template&id=fb0b619a&scoped=true\"\nimport script from \"./CreatePost.vue?vue&type=script&lang=js\"\nexport * from \"./CreatePost.vue?vue&type=script&lang=js\"\n\nimport \"./CreatePost.vue?vue&type=style&index=0&id=fb0b619a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb0b619a\"]])\n\nexport default __exports__","<template>\r\n  <!-- 글 수정 페이지 -->\r\n  <div class=\"navbar\">\r\n    <header>\r\n      <h1>\r\n        <router-link to=\"/\" class=\"blog_title\">BlogProject</router-link>\r\n      </h1>\r\n      <button v-if=\"!isLoggedIn\" class=\"logout-button\" @click=\"goToUserLogin\">\r\n        로그인\r\n      </button>\r\n      <button v-else class=\"logout-button\" @click=\"logout\">로그아웃</button>\r\n    </header>\r\n  </div>\r\n\r\n  <div class=\"edit-post-container\">\r\n    <h1>글 수정</h1>\r\n    <form @submit.prevent=\"submitPost\">\r\n      <div class=\"input-group\">\r\n        <label for=\"title\">제목</label>\r\n        <input type=\"text\" v-model=\"title\" id=\"title\" required />\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"content\">내용</label>\r\n        <div id=\"editor\"></div>\r\n      </div>\r\n      <div class=\"button-group\"><!-- 버튼 그룹 (취소 및 수정 완료 버튼) -->\r\n        <button type=\"button\" @click=\"cancelEdit\">취소</button>\r\n        <button type=\"submit\" class=\"edit-btn\">수정 완료</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\n\r\nexport default {\r\n  name: \"EditPost\",\r\n  data() {\r\n    return {\r\n      title: \"\",\r\n      content: \"\",\r\n      postId: null, //수정할 글 ID\r\n      isLoggedIn: !!localStorage.getItem(\"currentUser\"),\r\n    };\r\n  },\r\n  created() {\r\n    this.loadPostData();\r\n  },\r\n  methods: {// 해당 ID의 포스트 데이터를 불러오는 메서드\r\n    async loadPostData() {\r\n      const postId = parseInt(this.$route.params.id);// URL에서 전달된 post ID를 가져옴\r\n      this.postId = postId;\r\n\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3000/detail/${postId}`\r\n        );\r\n        const post = response.data.post;//서버에서 반환된 게시글 데이터\r\n        this.title = post.title;\r\n        this.content = post.content;\r\n        if (this.editor) {\r\n          this.editor.root.innerHTML = this.content;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"글을 찾을 수 없습니다:\", error);\r\n        this.$router.push(\"/list\");\r\n      }\r\n    },\r\n\r\n\r\n    async submitPost() {// 수정된 글을 저장하는 메서드\r\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      if (!currentUser) {\r\n        alert('로그인이 필요합니다.');\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n\r\n      this.content = this.editor.root.innerHTML;\r\n\r\n      try {\r\n        const response = await axios.put(\r\n          `http://localhost:3000/detail/${this.postId}`,// 수정할 게시글의 API 엔드포인트\r\n          {\r\n            title: this.title,\r\n            content: this.content,\r\n          },\r\n          {\r\n            headers: {\r\n              'current-user': currentUser.email,\r\n            },\r\n          }\r\n        );\r\n        console.log(response.data); // 성공 메시지 로그\r\n        alert(\"수정이 완료되었습니다.\");\r\n        this.$router.push(\"/list\");\r\n      } catch (error) {\r\n        console.error(\"글 수정 실패\", error.response?.data || error.message);\r\n        alert(\"수정에 실패했습니다. 다시 시도해주세요.\");\r\n      }\r\n    },\r\n    \r\n    cancelEdit() {// 수정 취소 (글 목록으로 돌아가기)\r\n      this.$router.push(\"/list\");\r\n    },\r\n\r\n    logout() {\r\n      localStorage.removeItem(\"user\");\r\n      this.$router.push(\"/login\");\r\n    },\r\n\r\n    goToUserLogin() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.editor = new Quill(\"#editor\", {\r\n      theme: \"snow\", // 기본 테마 설정\r\n      placeholder: \"내용을 입력하세요.\",\r\n      modules: {\r\n        toolbar: [\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"], // 텍스트 꾸미기\r\n          [{ list: \"ordered\" }, { list: \"bullet\" }], // 리스트\r\n          [\"link\", \"image\"], // 링크와 이미지\r\n          [{ align: [] }], // 텍스트 정렬\r\n          [{ size: [\"small\", false, \"large\", \"huge\"] }], // 텍스트 크기\r\n          [{ color: [] }, { background: [] }], // 글자색과 배경색\r\n        ],\r\n      },\r\n    });\r\n\r\n    if (this.content) {\r\n      this.editor.root.innerHTML = this.content;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#editor {/*에디터 스타일 */\r\n  height: 400px;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n}\r\n\r\n.edit-post-container {/*글 수정 페이지 컨테이너 */\r\n  width: 95%;\r\n  max-width: 1200px;\r\n  margin: 50px auto;\r\n  background-color: #aba6a6;\r\n  padding: 20px;/* 내부 여백 */\r\n  border-radius: 10px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.blog_title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\n\r\n.logout-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n  cursor: pointer;\r\n  padding: 5px 16px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-group label {\r\n  display: block;\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group input,\r\n.input-group textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\ntextarea {\r\n  height: 150px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n}\r\n\r\nbutton {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\nbutton[type=\"button\"] {\r\n  background-color: #ccc;\r\n}\r\n\r\nbutton[type=\"button\"]:hover {\r\n  background-color: #999;\r\n}\r\n</style>\r\n","import { render } from \"./EditPost.vue?vue&type=template&id=7f4d7ce6&scoped=true\"\nimport script from \"./EditPost.vue?vue&type=script&lang=js\"\nexport * from \"./EditPost.vue?vue&type=script&lang=js\"\n\nimport \"./EditPost.vue?vue&type=style&index=0&id=7f4d7ce6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7f4d7ce6\"]])\n\nexport default __exports__","<template>\r\n  <!--글 목록-->\r\n  <div class=\"container\">\r\n    <header>\r\n      <h1>\r\n        <router-link to=\"/\" class=\"blog_title\">BlogProject</router-link>\r\n      </h1>\r\n      <button v-if=\"!isLoggedIn\" class=\"action-button\" @click=\"goToUserLogin\">\r\n        로그인\r\n      </button>\r\n      <button v-else class=\"logout-button\" @click=\"logout\">로그아웃</button>\r\n    </header>\r\n    <div class=\"post-list-container\"> <!-- 전체 글 목록 컨테이너 -->\r\n      <h2 class=\"post-list-title\">글 목록</h2>\r\n      <div class=\"filter-container\"><!--필터 및 검색 -->\r\n        <div class=\"myPosts\"><!--내가 쓴 글 필터-->\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"filterMyPosts\" @change=\"reloadPosts\" /><!--내가 쓴 글 필터 체크박스-->\r\n            내가 쓴 글\r\n          </label>\r\n        </div>\r\n\r\n        <!-- 검색 기능 -->\r\n        <div class=\"search-container\">\r\n          <form @submit.prevent=\"searchPosts\">\r\n            <label for=\"sc\"></label>\r\n            <select v-model=\"searchType\" name=\"search\" id=\"sc\"><!--검색 타입 선택-->\r\n              <option value=\"title\">제목</option>\r\n              <option value=\"name\">작성자</option><!--검색 버튼 제목과 작성자로 선택-->\r\n            </select>\r\n            <input type=\"text\" v-model=\"searchKeyword\" placeholder=\"검색어를 입력하세요\" class=\"search-input\" />\r\n            <button type=\"submit\" class=\"search-button\">검색</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"post-list\"><!-- 글 목록 -->\r\n        <div v-for=\"post in paginatedPosts\" :key=\"post.id\" class=\"post-item\"><!-- 글 목록 아이템 -->\r\n          <span class=\"author\">글쓴이: {{ post.name }}</span>\r\n          <router-link :to=\"`/detail/${post.id}`\">\r\n            <h2 class=\"title\">{{ post.title }}</h2>\r\n          </router-link>\r\n          <span class=\"date\">작성일: {{ formatDate(post.created_at) }}</span>\r\n          <p class=\"views\">조회수: {{ post.views }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"pagination\"><!--하단 페이지 버튼-->\r\n        <button v-for=\"page in totalPages\" :key=\"page\" @click=\"changePage(page)\"\r\n          :class=\"{ active: currentPage === page }\" class=\"pagination-btn\"><!--페이지 번호 버튼-->\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 글작성 버튼 -->\r\n      <button type=\"button\" @click=\"createPost\" class=\"create-post-btn\">\r\n        글작성\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PostList\",//컴포넌트 이름\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      currentPage: 1,\r\n      postPerPage: 5,\r\n      isLoggedIn: !!localStorage.getItem(\"currentUser\"),\r\n      filterMyPosts: false,\r\n      searchKeyword: \"\",\r\n      searchType: \"title\",\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    sortedPosts() {//최신순으로 정렬된 게시글 목록 반환함\r\n      return [...this.posts].sort(\r\n        (a, b) => new Date(b.created_at) - new Date(a.created_at)//최신순으로 정렬\r\n      );\r\n    },\r\n    paginatedPosts() {//현재 페이지에 해당하는 게시글 목록 반환함\r\n      const startIndex = (this.currentPage - 1) * this.postPerPage;\r\n      const endIndex = startIndex + this.postPerPage;//시작 인덱스와 끝 인덱스 계산\r\n      return this.sortedPosts.slice(startIndex, endIndex);//시작 인덱스부터 끝 인덱스까지의 게시글 목록 반환\r\n    },\r\n    totalPages() {//전체 페이지 수\r\n      return Math.ceil(this.posts.length / this.postPerPage);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async reloadPosts() {//게시글 목록 다시 불러오기\r\n      try {\r\n        const currentUserData = localStorage.getItem(\"currentUser\");\r\n        const currentUser = currentUserData\r\n          ? JSON.parse(currentUserData).email\r\n          : null;\r\n\r\n        const response = await axios.get(\"http://localhost:3000/list\", {\r\n          params: {\r\n            myPostsOnly: this.filterMyPosts ? \"true\" : \"false\",\r\n            currentUserEmail: currentUser,\r\n          },\r\n        });\r\n\r\n        this.posts = response.data.sort(\r\n          (a, b) => new Date(b.created_at) - new Date(a.created_at)\r\n        );\r\n        this.currentPage = 1;\r\n\r\n      } catch (error) {\r\n        console.error(\"게시물 불러오기 중 오류 발생:\", error);\r\n      }\r\n    },\r\n\r\n    async searchPosts() {//검색 기능\r\n      if (!this.searchKeyword.trim()) {\r\n        alert(\"검색어를 입력해주세요.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/api/search\", {\r\n          params: {\r\n            type: this.searchType,//검색 타입(제목 또는 작성자)\r\n            keyword: this.searchKeyword.trim(),\r\n          },\r\n        });\r\n        this.posts = response.data; // 검색 결과를 posts에 저장\r\n        this.currentPage = 1; // 검색 후 첫 페이지로 초기화\r\n      } catch (error) {\r\n        console.error(\"검색 실패:\", error.response?.data?.message || error.message);\r\n        alert(\"검색 중 오류가 발생했습니다.\");\r\n      }\r\n    },\r\n\r\n    createPost() {\r\n      this.$router.push(\"/create\");\r\n    },\r\n\r\n    logout() {\r\n      localStorage.removeItem(\"currentUser\");\r\n      this.$router.push(\"/login\");\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      if (!dateString) return \"Invalid Date\";\r\n\r\n      const date = new Date(dateString.replace(\" \", \"T\"));\r\n      if (isNaN(date.getTime())) return \"Invalid Date\";\r\n\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n\r\n    changePage(page) {\r\n      this.currentPage = page;\r\n    },\r\n\r\n    goToUserLogin() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n  },\r\n\r\n  mounted() {//컴포넌트가 화면에 나타날 때 실행\r\n    this.reloadPosts();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 60vh;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  padding: 10px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.blog_title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  color: black;\r\n  background-color: transparent;\r\n}\r\n\r\n.post-list-container {\r\n  width: 95%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;/* 컨테이너를 수평 중앙에 배치 */\r\n  padding: 20px;\r\n  background-color: #ada9a9;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;/* 플렉스 방향을 세로(열)로 설정 */\r\n  height: 650px;\r\n  position: absolute;\r\n  top: 10%;/* 상단에서 부모 요소 기준 */\r\n}\r\n\r\n.logout-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n  cursor: pointer;\r\n  padding: 5px 16px;\r\n}\r\n\r\n.post-list-title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.post-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n  align-items: center;\r\n  background-color: #f9f9f9;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.blog_title {\r\n  background-color: #f0f0f0;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.author,\r\n.date,\r\n.views {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  flex-grow: 1;/*가로 공간*/\r\n  margin: 0 10px;\r\n}\r\n\r\n.views {\r\n  margin-left: 10px;\r\n}\r\n\r\n.create-post-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n}\r\n\r\n.create-post-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/*pagination style */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 5px;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.pagination-btn {\r\n  padding: 5px 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination-btn.active {\r\n  background-color: #555;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.pagination-btn:hover {\r\n  background-color: #0056b3;\r\n  color: white;\r\n}\r\n\r\n.filter-container {\r\n  display: flex;/* 부모 박스 내가 쓴 글, 검색 기능 */\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.myPosts {\r\n  margin-bottom: auto;\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n\r\n}\r\n\r\n.search-input {\r\n  padding: 5px;\r\n  font-size: 12px;\r\n  width: 200px;\r\n  margin-left: 7px;/* 버튼과 입력 필드 사이 간격 추가 */\r\n}\r\n\r\n.search-button {\r\n  padding: 5px;\r\n  margin-left: 7px;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n","import { render } from \"./PostList.vue?vue&type=template&id=98265466&scoped=true\"\nimport script from \"./PostList.vue?vue&type=script&lang=js\"\nexport * from \"./PostList.vue?vue&type=script&lang=js\"\n\nimport \"./PostList.vue?vue&type=style&index=0&id=98265466&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-98265466\"]])\n\nexport default __exports__","<template>\r\n  <!--글 상세-->\r\n  <div class=\"navbar\">\r\n    <header>\r\n      <h1>\r\n        <router-link to=\"/\" class=\"blog_title\">BlogProject</router-link>\r\n      </h1>\r\n      <button v-if=\"!isLoggedIn\" class=\"logout-button\" @click=\"goToUserLogin\">\r\n        로그인\r\n      </button>\r\n      <button v-else class=\"logout-button\" @click=\"logout\">로그아웃</button>\r\n    </header>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"post-detail\"><!--게시글 데이터가 있을 경우 표시-->\r\n      <div v-if=\"post.title\">\r\n        <h1>{{ post.title }}</h1>\r\n        <p><strong>글쓴이:</strong> {{ post.name }}</p>\r\n        <p>\r\n          <strong>작성일:</strong>\r\n          {{\r\n            post.created_at ? formatDate(post.created_at) : \"작성일 정보 없음\"\r\n          }}\r\n        </p>\r\n        <p><strong>조회수:</strong> {{ post.views }}</p>\r\n        <div v-html=\"post.content\"></div><!-- 글 내용을 HTML로 렌더링 -->\r\n      </div>\r\n      <div class=\"button-container\"><!-- 작성자만 표시된 수정, 삭제 버튼 -->\r\n        <button v-if=\"post.email === currentUserId\" @click=\"editPost\" class=\"edit-btn\">수정</button><!-- 작성자가 맞으면 수정 -->\r\n        <button v-if=\"post.email === currentUserId\" @click=\"deletePost\" class=\"delete-btn\">삭제</button>\r\n      </div>\r\n\r\n      <div class=\"comments-section\"><!-- 댓글 섹션 -->\r\n        <h3>댓글 {{ post.commentCount }}</h3><!-- 댓글 개수 -->\r\n        <form @submit.prevent=\"addComment\">\r\n          <textarea v-model=\"newComment\" placeholder=\"댓글을 작성하시오\" required></textarea>\r\n          <button type=\"submit\">댓글 작성</button>\r\n        </form>\r\n\r\n        <div class=\"comments-list\">\r\n          <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\r\n            <p>{{ comment.content }}</p><!-- 댓글 내용 -->\r\n\r\n            <div class=\"comment-footer\">\r\n              <small>작성자 : {{ comment.username }} |\r\n                {{ comment.createdAt }}</small>\r\n\r\n              <button @click=\"toggleLike(comment.id)\" class=\"like-button\"><!-- 댓글 좋아요 버튼 -->\r\n                <span>{{ comment.isLiked ? '❤️' : '🤍' }}</span> {{ comment.likesCount }}\r\n              </button>\r\n              <img v-if=\"comment.userId === currentUserId\" src=\"@/assets/delete-comment.jpg\" alt=\"삭제\"\r\n                class=\"delete-icon\" @click=\"deleteComment(comment.id)\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nexport default {\r\n  props: {\r\n    postId: { type: [String, Number], required: true },//전달받은 게시글 ID\r\n    id: { type: [String, Number], required: true },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      comments: [],//댓글 목록 배열\r\n      newComment: \"\",\r\n      currentUserId:\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))?.email || null,//현재 사용자 ID\r\n      post: {}, // 상세 글 데이터\r\n      isLoggedIn: !!localStorage.getItem(\"currentUser\"),\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.getPostDetail();//게시글 상세 정보 가져오기\r\n    this.fetchComments();//댓글 목록 가져오기\r\n    console.log(\"현재 사용자 ID:\", this.currentUserId);//현재 사용자 ID 콘솔솔\r\n  },\r\n\r\n  methods: {\r\n    async toggleLike(commentId) {//좋아요 토글 메서드 추가, 취소소\r\n      const comment = this.comments.find((c) => c.id === commentId);//해당 댓글 ID 찾기\r\n      if (!comment) return;\r\n\r\n      try {\r\n        const response = await axios.post(`/api/comments/${commentId}/likes`, {\r\n          userId: this.currentUserId,\r\n        });\r\n\r\n        if (response.data.message.includes(\"추가\")) {//좋아요 추가 카운트\r\n          comment.isLiked = true;\r\n          comment.likesCount += 1;\r\n        } else if (response.data.message.includes(\"취소\")) {\r\n          comment.isLiked = false;\r\n          comment.likesCount -= 1;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"좋아요 처리 중 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n\r\n    async addLike(commentId) {//좋아요 추가 메서드\r\n      try {\r\n        const response = await axios.post(`/api/comments/${commentId}/likes`, {\r\n          userId: this.currentUserId, // 이메일 전달\r\n        });\r\n        if (response.data.message === \"이미 좋아요를 눌렀습니다.\") {// 이미 좋아요를 눌렀다면 메시지를 표시하지 않고 종료\r\n          console.log(\"이미 좋아요를 눌렀습니다.\");\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"좋아요 추가 실패:\", error.response?.data || error.message);\r\n        alert(error.response?.data?.message || \"좋아요 추가에 실패했습니다.\");\r\n      }\r\n    },\r\n\r\n    async removeLike(commentId) {//좋아요 취소 메서드\r\n      try {\r\n        await axios.delete(`/api/comments/${commentId}/likes`, { data: { userId: this.currentUserId } });\r\n      } catch (error) {\r\n        console.error(\"좋아요 취소 실패:\", error.response?.data || error.message);\r\n        alert(error.response?.data?.message || \"좋아요 취소에 실패했습니다.\");\r\n      }\r\n    },\r\n    async getPostDetail() {//게시글 상세 데이터 로드\r\n      const postId = parseInt(this.$route.params.id);//URL에서 게시글 ID 가져옴\r\n      if (isNaN(postId)) {\r\n        console.error(\"잘못된 게시물 ID:\", this.$route.params.id);\r\n        this.$router.push(\"/list\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3000/detail/${postId}`\r\n        );\r\n        this.post = response.data.post;//게시글 데이터 저장\r\n\r\n        await this.incrementViewCount(postId);//조회수 증가 처리\r\n\r\n      } catch (error) {\r\n        console.error(\r\n          \"게시물 불러오기 중 오류 발생:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n        this.$router.push(\"/list\");\r\n      }\r\n    },\r\n    async fetchComments() {//댓글 데이터 로드 메서드\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3000/comments/${this.$route.params.id}`\r\n        );\r\n\r\n        // 댓글 목록 초기화 후 서버 데이터 추가\r\n        this.comments = response.data.map((comment) => ({\r\n          id: comment.id,\r\n          userId: comment.userId,\r\n          username: comment.userId,\r\n          createdAt: this.formatDate(comment.createdAt),\r\n          content: comment.content,\r\n          isLiked: false, // 기본값 설정\r\n          likesCount: 0, // 기본값 설정\r\n        }));\r\n\r\n\r\n        for (const comment of this.comments) {// 좋아요 상태와 카운트 추가\r\n          try {\r\n            const likeResponse = await axios.get(`/api/comments/${comment.id}/likes`, {\r\n              params: { userId: this.currentUserId },\r\n            });\r\n            comment.isLiked = likeResponse.data.isLiked;\r\n            comment.likesCount = likeResponse.data.likesCount;\r\n          } catch (error) {\r\n            console.error(`좋아요 데이터 가져오기 실패 (댓글 ID: ${comment.id}):`, error.message);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"댓글 불러오기 실패:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n\r\n    async addComment() {//댓글 추가 메서드\r\n      try {\r\n        const storedUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n        if (!storedUser || !storedUser.email) {\r\n          throw new Error(\"사용자 정보가 없습니다.\");\r\n        }\r\n        const response = await axios.post(// 서버에 댓글 작성 요청\r\n          `http://localhost:3000/comments/${this.$route.params.id}`,//게시글 ID를 전달\r\n          {\r\n            postId: this.$route.params.id,\r\n            content: this.newComment,\r\n            userEmail: storedUser.email,\r\n          }\r\n        );\r\n\r\n        this.comments.push({// 서버에서 반환된 댓글 데이터 추가\r\n          id: response.data.id,\r\n          userId: response.data.username,\r\n          username: response.data.username,\r\n          createdAt: this.formatDate(response.data.createdAt),\r\n          content: response.data.content,\r\n          isLiked: false,\r\n          likesCount: 0,\r\n        });\r\n\r\n        this.newComment = \"\";// 입력 필드 초기화\r\n      } catch (error) {\r\n        console.error(\"댓글 작성 실패:\", error.response?.data || error.message);\r\n        alert(\"댓글 작성에 실패했습니다. 다시 시도해주세요.\");\r\n      }\r\n    },\r\n\r\n\r\n    async deleteComment(commentId) {//댓글 삭제 메서드\r\n      alert('정말 이 댓글을 삭제하시겠습니까?');\r\n      try {\r\n        const token = localStorage.getItem(\"token\");//토큰 가져옴\r\n        const storedUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        if (!storedUser || !storedUser.email) {\r\n          throw new Error(\"사용자 정보가 없습니다.\");\r\n        }\r\n        const currentUserEmail = storedUser.email;\r\n\r\n        await axios.delete(`http://localhost:3000/comments/${commentId}`, {//서버에서 댓글 삭제 요청 보내기\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"current-user\": currentUserEmail,\r\n          },\r\n        });\r\n\r\n        this.comments = this.comments.filter(//삭제된 댓글 제외하고 다시 렌더링\r\n          (comment) => comment.id !== commentId//다른 댓글은 유지\r\n        );\r\n      } catch (error) {\r\n        console.log(\"댓글 삭제 실패:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n\r\n    async incrementViewCount(postId) {//조회수 증가 메서드\r\n      try {\r\n        await axios.put(`http://localhost:3000/detail/${postId}/views`);\r\n      } catch (error) {\r\n        console.error(\r\n          \"조회수 증가 에러 발생:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      }\r\n    },\r\n\r\n\r\n    editPost() {// 글 수정 페이지로 이동\r\n      const currentUser = localStorage.getItem(\"currentUser\");\r\n\r\n      if (!currentUser) {\r\n        alert(\"로그인이 필요합니다.\");\r\n        this.$router.push(\"/login\");\r\n        return;\r\n      }\r\n      this.$router.push(`/edit/${this.post.id}`);//수정 페이지로 이동\r\n    },\r\n\r\n    logout() {\r\n      localStorage.removeItem(\"user\");\r\n      this.$router.push(\"/login\");\r\n    },\r\n\r\n    goToUserLogin() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n\r\n    async deletePost() { // 글 삭제 메서드\r\n      if (confirm(\"정말 이 글을 삭제하시겠습니까?\")) {\r\n        try {\r\n          const storedUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n          const currentUserEmail = storedUser.email;//내 이메일만 삭제 가능\r\n          console.log(currentUserEmail);\r\n          console.log(\"storedUserEmail: \", storedUser.email);\r\n\r\n          await axios.delete(`http://localhost:3000/detail/${this.post.id}`, {\r\n            headers: {\r\n              \"current-user\": currentUserEmail,\r\n            },\r\n          });\r\n          alert(\"게시물이 삭제되었습니다.\");\r\n          this.$router.push(\"/list\");\r\n        } catch (error) {\r\n          console.error(\r\n            \"게시물 삭제 중 오류 발생:\",\r\n            error.response?.data || error.message\r\n          );\r\n          alert(\"게시물 삭제에 실패했습니다.\");\r\n\r\n          if (error.response?.status === 403) {\r\n            alert(\"삭제 권한이 없습니다.\");\r\n          } else {\r\n            alert(\"게시물 삭제에 실패했습니다.\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n  },\r\n  mounted() {//마운트된 후 목록 가져옴\r\n    this.fetchComments();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  /*전체 컨테이너*/\r\n  width: 95%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  /* 컨테이너를 수평 중앙에 배치 */\r\n  display: flex;\r\n  /* 플렉스 박스 사용 */\r\n  justify-content: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.blog_title {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  /* 굵은 글씨체 */\r\n  margin: 0;\r\n  text-decoration: none;\r\n  /* 밑줄 제거 */\r\n  color: black;\r\n}\r\n\r\n\r\n.logout-button {\r\n  /* 로그아웃 버튼 */\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  /* 테두리 없음 */\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n  cursor: pointer;\r\n  /* 클릭 가능한 커서 표시 */\r\n  padding: 5px 16px;\r\n}\r\n\r\n.post-detail {\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  /* 최대 너비 설정 */\r\n  background-color: #f9f9f9;\r\n  /* 흰색 배경 */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n}\r\n\r\np {\r\n  font-size: 16px;\r\n  margin: 10px 0;\r\n}\r\n\r\ndiv {\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.container {\r\n  background-color: #aba6a6;\r\n  /* 회색 배경 */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n\r\n.button-container {\r\n  /* 버튼 스타일 */\r\n  display: flex;\r\n  /* 플렉스 박스 사용으로 버튼 정렬 가능*/\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.edit-btn,\r\n.delete-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.edit-btn {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.edit-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #ff4747;\r\n  color: white;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: #e03e3e;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 5px;\r\n}\r\n\r\n.comments-list {\r\n  margin-top: 10px;\r\n}\r\n\r\n.comment-item {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.comment-item p {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.comment-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n/* 댓글 삭제 버튼 스타일 */\r\n.comment-footer .delete-icon {\r\n  width: 20px;\r\n  /* X 이모티콘 너비 */\r\n  height: 20px;\r\n  /* X 이모티콘 높이 */\r\n  cursor: pointer;\r\n  /* 클릭 가능한 커서 표시 */\r\n  display: flex;\r\n  /* 플렉스 박스를 사용하여 정렬 */\r\n  justify-content: center;\r\n  /* 가로 중앙 정렬 */\r\n  align-items: center;\r\n  /* 세로 중앙 정렬 */\r\n  background-color: #ff4d4f;\r\n  /* 배경색 설정 */\r\n  border-radius: 50%;\r\n  /* 원형 버튼으로 설정 */\r\n  border: none;\r\n  /* 테두리 제거 */\r\n}\r\n\r\n.comment-footer .delete-icon:hover {\r\n  background-color: #d9363e;\r\n  /* 호버 시 배경색 변경 */\r\n}\r\n\r\n\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  resize: none;\r\n}\r\n\r\n.comment-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.comment-footer .like-button {\r\n  margin-left: auto;\r\n  /* 좋아요 버튼을 오른쪽 끝으로 */\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n</style>","import { render } from \"./PostDetail.vue?vue&type=template&id=e1fb8d60&scoped=true\"\nimport script from \"./PostDetail.vue?vue&type=script&lang=js\"\nexport * from \"./PostDetail.vue?vue&type=script&lang=js\"\n\nimport \"./PostDetail.vue?vue&type=style&index=0&id=e1fb8d60&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e1fb8d60\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';  // Vue 3에서 사용하는 방식\r\nimport MainPage from '@/components/MainPage.vue';\r\nimport UserLogin from '@/components/UserLogin.vue';\r\nimport SignUp from '@/components/SignUp.vue';\r\nimport CreatePost from '@/components/CreatePost.vue';\r\nimport EditPost from '@/components/EditPost.vue';\r\nimport PostList from '@/components/PostList.vue';\r\nimport PostDetail from '@/components/PostDetail.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: MainPage\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: UserLogin\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'SignUp',\r\n    component: SignUp\r\n  },\r\n  {\r\n    path:'/create',\r\n    name: 'CreatePost',\r\n    component: CreatePost\r\n  },\r\n  {\r\n    path:'/edit/:id',\r\n    name: 'EditPost',\r\n    component: EditPost,\r\n    props: true\r\n  },\r\n  {\r\n    path:'/list',\r\n    name: 'PostList',\r\n    component: PostList\r\n  },\r\n  {\r\n    path: '/detail/:id',\r\n    name: 'PostDetail',\r\n    component: PostDetail,\r\n    props: true\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),  // Vue 3에서 사용하는 방식\r\n  routes\r\n});\r\n\r\nexport default router;\r\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n//import Vue from 'vue';\r\nimport router from './router';\r\n\r\n//Vue.config.productionTip=false;\r\n\r\n// new Vue({\r\n//   router,\r\n//   render: h=> h(App)\r\n// }).$mount('#app');\r\n\r\n// createApp(App).mount('#app')\r\n\r\n\r\nconst app = createApp(App);       // Vue 앱 생성\r\napp.use(router);                  // 라우터 사용\r\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblogproject\"] = self[\"webpackChunkblogproject\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(964); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","name","components","__exports__","render","class","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","goToPostList","_hoisted_3","$data","isLoggedIn","key","logout","goToUserLogin","goToCreatePage","_createCommentVNode","_hoisted_4","_hoisted_5","_Fragment","_renderList","sortedPost","post","_toDisplayString","title","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","formatDate","created_at","_hoisted_10","views","innerHTML","content","_hoisted_11","data","posts","author","date","previewVisible","localStorage","getItem","computed","this","sort","a","b","slice","mounted","fetch","then","response","json","catch","error","console","window","addEventListener","syncLoginState","methods","onDragStart","event","dataTransfer","setData","onDrop","draggedItem","getData","removeItem","alert","$router","push","dateString","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","beforeUnmount","removeEventListener","_component_router_link","to","default","_withCtx","_createTextVNode","_","onSubmit","_withModifiers","login","for","type","$event","email","placeholder","password","goToSignUp","loginData","axios","message","user","log","setItem","JSON","stringify","dispatchEvent","Event","submitForm","passwordConfirm","userData","submitPost","required","_createStaticVNode","currentUser","parse","apply","editor","root","newPost","now","toISOString","Quill","theme","modules","toolbar","list","align","size","color","background","cancelEdit","postId","created","loadPostData","parseInt","$route","params","get","put","headers","filterMyPosts","onChange","reloadPosts","searchPosts","searchType","value","searchKeyword","paginatedPosts","totalPages","page","changePage","_normalizeClass","active","currentPage","_hoisted_12","createPost","postPerPage","sortedPosts","startIndex","endIndex","Math","ceil","length","currentUserData","myPostsOnly","currentUserEmail","trim","keyword","replace","isNaN","getTime","currentUserId","editPost","deletePost","commentCount","addComment","newComment","comments","comment","username","createdAt","toggleLike","isLiked","likesCount","userId","src","_imports_0","alt","deleteComment","defaults","baseURL","props","Number","getPostDetail","fetchComments","commentId","find","c","includes","addLike","removeLike","delete","incrementViewCount","map","likeResponse","storedUser","Error","userEmail","token","Authorization","filter","confirm","status","routes","path","component","MainPage","UserLogin","SignUp","CreatePost","EditPost","PostList","PostDetail","router","createRouter","history","createWebHistory","process","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}